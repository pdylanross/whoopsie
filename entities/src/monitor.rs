//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "monitor")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub spec: Json,
    pub api_version: String,
    pub kind: String,
    #[sea_orm(column_type = "Float", nullable)]
    pub check_interval: Option<f32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::monitor_status::Entity")]
    MonitorStatus,
}

impl Related<super::monitor_status::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MonitorStatus.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
